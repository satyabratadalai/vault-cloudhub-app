pipeline {
    agent any
    environment {
        MAVEN_OPTS = "--add-opens=java.base/sun.net.www.protocol.jar=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED"
    }
    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/satyabratadalai/vault-cloudhub-app.git', branch: 'main'
            }
        }
        stage('Fetch Secrets') {
            steps {
                script {
                    def vaultPath = ''
                    echo "Environment Selected : ${ENV}"
                    switch(ENV) {
                        case "dev":
                            vaultPath = "secret/mulesoft-dev"
                            break
                        case "uat":
                            vaultPath = "secret/mulesoft-uat"
                            break
                        case "prod":
                            vaultPath = "secret/mulesoft-prod"
                            break
                        default:
                            echo "INVALID ENV"
                            return
                    }

                    // Fetch and set secrets from Vault
                    def secrets = [
                        [$class: 'VaultSecret', path: vaultPath, secretValues: [
                            [$class: 'VaultSecretValue', envVar: 'DATABASE_USERNAME', vaultKey: 'database.username'],
                            [$class: 'VaultSecretValue', envVar: 'DATABASE_PASSWORD', vaultKey: 'database.password']
                        ]]
                    ]
                    withVault([vaultSecrets: secrets, vaultConfigurationId: 'vault-token']) {
                        env.DATABASE_USERNAME = env.DATABASE_USERNAME
                        env.DATABASE_PASSWORD = env.DATABASE_PASSWORD
                        env.DATABASE_USERNAME_DUMMY = 'DUMMY'
                        env.DATABASE_PASSWORD_DUMMY = 'DUMMY'
                    }
                }
            }
        }
        stage('Move To Exchange') {
            steps {
                withMaven(maven: 'Maven', mavenSettingsConfig: '3802749b-765f-4b02-86ab-bcf94c417beb') {
                    sh "mvn clean package deploy -Ddatabase.username=${env.DATABASE_USERNAME_DUMMY} -Ddatabase.password=${env.DATABASE_PASSWORD_DUMMY}"
                }
            }
        }
         stage('Deploy To Cloudhub 2.0') {
            steps {
                withMaven(maven: 'Maven', mavenSettingsConfig: '3802749b-765f-4b02-86ab-bcf94c417beb') {
                    sh "mvn clean package deploy -DmuleDeploy -Ddatabase.username=${env.DATABASE_USERNAME} -Ddatabase.password=${env.DATABASE_PASSWORD}"
                }
            }
        }
    }
}
